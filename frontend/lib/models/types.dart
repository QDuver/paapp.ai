/// Auto-generated models from JSON Schema
/// DO NOT EDIT THIS FILE MANUALLY
/// Run: python models.py to regenerate
library;

class Exercise {
  /// Name of the exercise
  String name;

  /// Weight in kilograms
  double? weight_kg;

  /// Number of repetitions
  int? repetitions;

  /// Duration in seconds
  int? duration_sec;

  /// Rest time in seconds
  int? rest;

  Exercise({
    required this.name,
    this.weight_kg,
    this.repetitions,
    this.duration_sec,
    this.rest,
  });

  factory Exercise.fromJson(Map<String, dynamic> json) {
    return Exercise(
      name: json['name'] as String,
      weight_kg: json['weight_kg'] != null
          ? (json['weight_kg'] as num).toDouble()
          : null,
      repetitions:
          json['repetitions'] != null ? json['repetitions'] as int : null,
      duration_sec:
          json['duration_sec'] != null ? json['duration_sec'] as int : null,
      rest: json['rest'] != null ? json['rest'] as int : 90,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'weight_kg': weight_kg,
      'repetitions': repetitions,
      'duration_sec': duration_sec,
      'rest': rest,
    };
  }
}

class RunningDistance {
  /// Distance in kilometers
  double distance_km;

  /// Duration in minutes
  String duration_min;

  RunningDistance({required this.distance_km, required this.duration_min});

  factory RunningDistance.fromJson(Map<String, dynamic> json) {
    return RunningDistance(
      distance_km: (json['distance_km'] as num).toDouble(),
      duration_min: json['duration_min'] as String,
    );
  }

  Map<String, dynamic> toJson() {
    return {'distance_km': distance_km, 'duration_min': duration_min};
  }
}

class RunningIntervals {
  /// Speed in km/h
  double speed_km;

  /// Duration in seconds
  String duration_sec;

  /// Rest time
  String rest;

  /// Number of repetitions
  int repetitions;

  RunningIntervals({
    required this.speed_km,
    required this.duration_sec,
    required this.rest,
    required this.repetitions,
  });

  factory RunningIntervals.fromJson(Map<String, dynamic> json) {
    return RunningIntervals(
      speed_km: (json['speed_km'] as num).toDouble(),
      duration_sec: json['duration_sec'] as String,
      rest: json['rest'] as String,
      repetitions: json['repetitions'] as int,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'speed_km': speed_km,
      'duration_sec': duration_sec,
      'rest': rest,
      'repetitions': repetitions,
    };
  }
}

class ExerciseDay {
  /// Date in YYYY-MM-DD format
  String date;

  /// Wake up time
  String? wakeup_time;

  /// Sleep quality scale from 1 to 10
  int? sleep_quality;

  /// Available exercise time in minutes
  int? available_exercise_time;
  List<Exercise>? exercises;

  /// Whether the person is at home
  bool? at_home;

  ExerciseDay({
    required this.date,
    this.wakeup_time,
    this.sleep_quality,
    this.available_exercise_time,
    this.exercises,
    this.at_home,
  });

  factory ExerciseDay.fromJson(Map<String, dynamic> json) {
    return ExerciseDay(
      date: json['date'] as String,
      wakeup_time: json['wakeup_time'] as String?,
      sleep_quality: json['sleep_quality'] as int?,
      available_exercise_time: json['available_exercise_time'] as int?,
      exercises: json['exercises'] != null
          ? (json['exercises'] as List<dynamic>)
              .map((e) => Exercise.fromJson(e as Map<String, dynamic>))
              .toList()
          : null,
      at_home: json['at_home'] as bool? ?? true,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'date': date,
      'wakeup_time': wakeup_time,
      'sleep_quality': sleep_quality,
      'available_exercise_time': available_exercise_time,
      'exercises': exercises?.map((e) => e.toJson()).toList(),
      'at_home': at_home,
    };
  }
}
